configfile: "config/config.yaml"

import glob

def get_msas(wildcards):
    msas=[]
    for file in glob.glob("resources/{}/*.faa".format(wildcards.dataset)):
        msas.append(file.replace(".faa", ".trim").replace("resources", "results").replace(wildcards.dataset, wildcards.dataset+"/trimal"))
    return msas

rule all:
    input:
        expand("results/{dataset}/alignment_statistics.txt", dataset=config["dataset"]),
        expand("results/{dataset}/family_scoring.txt", dataset=config["dataset"]),
        expand("results/{dataset}/phylobayes_inputs", dataset=config["dataset"]),
        expand("results/{dataset}/concatenated.phylip", dataset=config["dataset"]),
        expand("results/{dataset}/concatenated.fa", dataset=config["dataset"])

rule align_msas_with_mafft:
    input:
        "resources/{dataset}/{msa}.faa" 
    output:
        "results/{dataset}/mafft/{msa}.aln"
    threads: config["mafft"]["threads"]
    resources:
        mem_mb_per_cpu=4000,
        runtime=600
    shell:
        "mafft --auto --thread {threads} {input} > {output}"

rule trim_msas_with_trimal:
    input:
        "results/{dataset}/mafft/{msa}.aln"
    output:
        "results/{dataset}/trimal/{msa}.trim"
    resources:
        mem_mb_per_cpu=3000,
        runtime=600
    shell:
        "trimal -in {input} -out {output} -gt 0.1"

rule msas_statistics:
    input:
        get_msas
    output:
        "results/{dataset}/alignment_statistics.txt"
    params:
        inputdir="results/{dataset}/trimal/"
    shell:
        "workflow/scripts/alignment_stats.py -i {params.inputdir} -o {output}"

rule msas_scoring:
    input:
        get_msas
    output:
        "results/{dataset}/family_scoring.txt"
    params:
        inputdir="results/{dataset}/trimal/"
    shell:
        "workflow/scripts/family_scoring.py -i {params.inputdir} -o {output}"

rule filter_msas:
    input:
        get_msas,
        scoring="results/{dataset}/family_scoring.txt"
    output:
        directory("results/{dataset}/filtered")
    params:
        inputdir="results/{dataset}/trimal/"
    shell:
        "workflow/scripts/filter_by_universality.py -i {params.inputdir} -m {input.scoring} -o {output}"

rule concatenate_filtered_msas_fasta:
    input:
        "results/{dataset}/filtered"
    output:
        "results/{dataset}/concatenated.fa"
    shell:
        "workflow/scripts/concatenate.py -i {input} -o {output} -f fasta"

rule concatenate_filtered_msas_phylip:
    input:
        "results/{dataset}/filtered"
    output:
        "results/{dataset}/concatenated.phylip"
    shell:
        "workflow/scripts/concatenate.py -i {input} -o {output} -f phylip"

rule select_topscoring_msas_for_phylobayes:
    input:
        get_msas,
        scoring="results/{dataset}/family_scoring.txt"
    output:
        directory("results/{dataset}/phylobayes_inputs")
    params:
        inputdir="results/{dataset}/trimal/"
    shell:
        "workflow/scripts/select_topscoring_for_pb.py -i {params.inputdir} -o {output} -m {input.scoring}"
